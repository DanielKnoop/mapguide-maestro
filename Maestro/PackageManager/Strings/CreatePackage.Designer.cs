//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OSGeo.MapGuide.Maestro.PackageManager.Strings {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CreatePackage {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CreatePackage() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("OSGeo.MapGuide.Maestro.PackageManager.Strings.CreatePackage", typeof(CreatePackage).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All types.
        /// </summary>
        internal static string AllResourceTypes {
            get {
                return ResourceManager.GetString("AllResourceTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder must start with \&quot;Library://\&quot;, do you want the starting folder to become:\n {0} ?.
        /// </summary>
        internal static string FolderMissingPrefix {
            get {
                return ResourceManager.GetString("FolderMissingPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while validating the restore path: {0}\nIt should have the format: \&quot;Libray://folder/folder/\&quot;..
        /// </summary>
        internal static string InvalidRestorePathError {
            get {
                return ResourceManager.GetString("InvalidRestorePathError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have not selected a starting folder, do you want to back up the entire site?.
        /// </summary>
        internal static string NoFolderSelected {
            get {
                return ResourceManager.GetString("NoFolderSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have selected to restore the package at another location, but not entered one.
        ///This will cause the package to be restored a the root of the resource tree.
        ///Are you sure this is what you want?.
        /// </summary>
        internal static string NoRestorePathWarning {
            get {
                return ResourceManager.GetString("NoRestorePathWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must select at least one type.
        /// </summary>
        internal static string NoTypesSelected {
            get {
                return ResourceManager.GetString("NoTypesSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must enter a full path to the output file.
        /// </summary>
        internal static string OutputFileMissing {
            get {
                return ResourceManager.GetString("OutputFileMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create package, error message: {0}.
        /// </summary>
        internal static string PackageCreationFailedError {
            get {
                return ResourceManager.GetString("PackageCreationFailedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have selected to restore the package at the root.
        ///You have also selected to delete the target before restoring.
        ///This will result in the entire repository being deleted and replaced with this package.
        ///Are you absolutely sure that is what you want?.
        /// </summary>
        internal static string RepositoryWipeWarning {
            get {
                return ResourceManager.GetString("RepositoryWipeWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown types.
        /// </summary>
        internal static string UnknownResourceTypes {
            get {
                return ResourceManager.GetString("UnknownResourceTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured while validating the output file path: {0}.
        /// </summary>
        internal static string ValidateOutputfileError {
            get {
                return ResourceManager.GetString("ValidateOutputfileError", resourceCulture);
            }
        }
    }
}
