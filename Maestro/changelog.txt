3.5 beta 1
----------

 - Watermark Definition editor
 - Symbol Definition editor (simple and compound). Currently supports the 1.0.0 schema feature set.
 - Updated Fusion editor to use Google Maps V3
 - Maestro.Editors library is now fully self-contained, not requiring the WebStudio directory for pattern images.
 - Preview Web Layouts now include a new command to report current map extents.
 - Exceptions are now displayed in a more flexible error dialog.
 - Class and Property nodes in Local Feature Source preview now show tooltips (ala FDO Toolbox).
 - Layer Definition editor has been re-structured to consume less vertical screen space.
 - Assorted icon updates for Symbol Definition and Watermark Definition resources.
 - API: Lots of API changes to Symbol Definitions and Watermarks
 - API: ObjectFactory API changes to allow creating Map Definitions and Symbol Definitions of different versions
 - API: New ExtendedObjectModel library which provides easy plumbing to register > 1.0.0 resource types with the ObjectFactory
 - Fix: Request failure when outbound requests window turned off.
 - Fix: Client-side workaround for ENUMERATEDRAWINGLAYERS potentially returning duplicate layer names.
 - Fix: Generic XML editor does not preview currently edited XML content.
 - Fix: Resource templates based on > 1.0.0 schema versions not being picked up by the new resource dialog
 - Fix: Exception thrown when opening Layer Definition with no point symbolization
 - Fix: Cleaner error message instead of the current ugly exception message when MapGuide connection is lost
 - Fix: Incorrect validation error when saving XML configuration document in the Feature Source
 - Fix: Assorted defects in reading and writing XML configuration documents

3.1
---

 - Now comes with a user guide!
 - Added a tip of the day dialog that is shown on startup (this can be turned off)
 - This is the first release with a public SDK and samples demonstrating using the Maestro API.
 - Generated Web Layout previews now have a KML export command
 - Add a command to view all spatial contexts of a feature source
 - Implement layer editor support for KML extrusion (RFC16). Thanks to James Murphy for test data needed in implementing this.
 - API: Add missing Visible property to ITaskPane
 - API: Small adjustment to selection APIs
 - API: Re-worked the RuntimeMap API so that draw order of layers can be manipulated like a collection.
 - API: Add APIs to GdalConfigurationDocument to allow calculation of combined extents.
 - API: Extend the IMappingService API to support rendering map legend images.
 - Fix: Show In Legend checkbox does nothing in the Layer Editor
 - Fix: Map Definition resource id field in a WebLayout 1.1.0 editor does not update when changed.
 - Fix: DWF Load Procedure not settings sheet extents.
 - Fix: Site Explorer items incorrectly highlighted when an existing resource is saved under a different resource ID.
 - Fix: Exception when opening drawing sources.
 - Fix: Set/Update sheet extents when marking a embedded DWF resource.
 - Fix: MgDbXmlException when creating a new Drawing Layer Definition from New Resource dialog.
 - Fix: Exception when deserializing configuration documents with non-english characters.
 - Fix: Overall extent of GDAL configuraton document not being the computed aggregate of all raster images when rebuilding.
 - Fix: Adding files to a Load Procedure does nothing.
 - Fix: Setting size context in Line Style editor does nothing.
 - Fix: Incorrect raster extent calculation on a GDAL configuration document for non-english systems (thanks Gunter Becker for suggested fix).
 - Save Resource button is now always enabled. Clicking it on a new resource will do the same thing as clicking Save Resource As

3.0 Final
---------

 - Add editor support for point styles with dwf symbols. Note that symbol previews are not perfect, but this is better than seeing nothing.
 - Fix: Ugly layer legend labels when previewing a layer
 - Fix: Badly generated W2D symbol reference class in the generated Layer Definition schema.
 - Fix: Save command is enabled regardless of dirty state
 - Fix: Validate command on toolbar did not validate the resource of active editor
 - Add an unsupported placeholder UI when opening a Load Procedure or Layer Definition in a specialized editor that contains unsupported elements.
 - Fix: New resources did not default to dirty state, allowing a save.
 - Fix: Folder of new Load Procedure should default to where it was made
 - Fix: Map Definition validation error on extents due to incorrect extent construction.
 - XML Editor validation icon change (to distinguish from main validation command)
 - Aliased file/directory support for building GDAL configuration documents via the editor
 - Fix: GdalRasterLocationItem could have multiple children of the same file name

3.0 RC1
-------
 
 - Fix: Automatically test the connection first before editing or resetting an ODBC configuration document. Abort the process if connection test fails.
 - Add an option to determine whether to validate resources on save
 - Fix: Web Layout and Fusion editors didn't show the generated publish URL
 - Fix: Layer Definition editor did not update the underlying XML content when deleting a vector scale range.
 - Fix: Adding a new vector scale range in the Layer Definition editor did not create a default area/line/point rule
 - Fix: When the "Show Area/Line/Point style checkbox is ticked, the Layer Definition editor would always create a new default rule 
 - Fix: Add missing coordinate system override functionality from 2.x
 - Fix: Editors not re-initializing themselves properly after saving, when using Edit As XML command.
 - Added more labels for main toolbar commands
 - XML Editor: Add support for validating XML content against local XSD files
 - Inactive document tabs are now colored differently to distinguish between active/inactive tabs
 - Fix: Add missing find/replace in XML content functionality
 - Add F2 keybinding to rename selected item in Site Explorer
 - Fix: Added missing duplicate resource command from 2.x
 - Fix: Added missing profiling feature from 2.x
 - Fix: UI layout changes for Generic Feature Source Editor

3.0 Beta 3
----------
 - Added a command to purge cached information for a feature source
 - Added resource validation error codes
 - UI layout tweaks for the ODBC Feature Source editor
 - Fix: Added missing button to close tabs in Feature Source Preview tool
 - Fix: Prevent ODBC feature source editor configuration/reset functionality if connection is not valid
 - Fix: Added missing Site Administrator command
 - Fix: Usability tweaks for the New Resource Dialog
 - Fix: Refined Load Procedure logic for handling default Coordinate Systems

3.0 Beta 2
----------
 - Added WMS specialized feature source editor
 - Added missing connection testing functionality for various specialized feature source editors
 - New dialog for creating folders
 - Fix: Open resources are protected from cut/copy/paste/rename operations
 - Fix: Add missing raster layer definition item template
 - Fix: Assorted Map Definition editor defects
 - Fix: Missing dirty state notifications on various editor components.
 - Fix: Deleting a directory does not close editors of child resources
 - Fix: Prompt to save unsaved resources when exiting.
 - Fix: Cut/Copy/Paste commands occasionally don't work in XML editor
 - Fix: Cannot create symbol definitions for given item templates.
 - Fix: Assorted Fusion editor defects
 - Fix: Text field MaxLength of 32767 lifted to int32.MaxValue in XML Editor

3.0 Beta 1
----------
 - Added GDAL specialized feature source editor
 - Added ODBC specialized feature source editor
 - Fusion editor now has basic widget management (ie. Most widget will use a generic XML editor)
 - Added Raster Layer Defintion editor (ported from 2.x)
 - Fix validation failing on raster feature sources

Test Build 4
------------
 - Added drag/drop package loading
 - Added resource re-pointer function as suggested by Jason Birch
 - Added warnings about tiled map invalidation when saving any possible affected resource
 - Add API to create runtime map and infer the meters-per-unit value. Uses TF.net for HTTP implementation and MgCoordinateSystem for Local implementation
 - Resource Data UI prompts confirmation on delete and when downloading, will show the downloaded location.
 - Fix layer up/down drag/drop reordering in Map Definition editor
 - Fix Coodinate System not being set in SHP load procedure editor
 - Fix feature source extension nodes not being deleted on remove
 - Improve validation performance by skipping already validated resources and caching commonly accessed objects.
 - More fusion editor progress:
    - Drag/drop map support
    - Remaining missing functionality:
       - Add/Remove/Edit containers
       - Widget set configuration
		  - Add new widget from WidgetInfo
		  - Edit widget parameters
		  - Remove widget from widget set

Test Build 3
------------

 - Migrated: Runtime Map API, with batched layer loading support improving create performance
 - Specialized SQLite editor
 - Partially migrated Fusion editor w/ Commerical Map Layer support
 - API: Resource change events for IResourceService
 - API: IGetResourceContents custom command

Test Build 2
------------

 - Drag and drop support
   - Create feature sources from dropped SDF/SHP/SQLite files
   - Create matching resource from dropped XML document
 - Migrated: MgCooker.exe
 - Migrated: Offical MapGuide API support.
 - Migrated: Server Status Monitor
 - Added drag/drop support for Resource Data UI
 - New validation rules for DWF-based layers
 - Make creating a new resource remember where you right-click so speed up the saving process.
 - Resource Dialog fixes and UX enhancements
 - Mono fixes related to XML and UI sizing.
 - Added inter-server migration tools
	- Move/Copy resources to a folder on another server with option to overwrite existing resources
	- Copy selected resource (and its dependencies) to the same path on another server, with choices of which dependent resources to copy and whether to overwrite existing resources.

Test Build 1
------------

First public preview release of Maestro 3.0.
 
 - Redesigned User Interface
	- Now driven by the SharpDevelop Core framework
		- Allows for easy customization of user interfaces.
		- AddIn infrastructure allows for easy addition of new functionality.	 
	- Site Explorer now uses the TreeViewAdv control, allowing for multiple selections and commands that operate on multiple selected resources. This control is compatible with Mono.
		- Some example commands which were previously not possible.
			- Delete selected resources
			- Validate selected resources
			- Package selected resources
 - Rewritten resource editor infrastructure
	- One editor per resource type / version
	- Uses the INotifyPropertyChanged databinding infrastructure
	- Allow for upgrades to newer versions of a resource type (eg. LayerDefinition 1.0.0 to LayerDefinition 1.3.0). Upgrades are manual and explicit, with a firefox-style notification bar to indicate whether a resource can be upgraded.
	- Resources types and/or versions without a specialized editor default to the XML editor.
	- Support for browsing Symbol Libraries
	- Flexible new resource templates
	- New specialized editors for
		- Drawing Source
		- Print Layout
	- Enhancements to existing specialized editors
		- Web Layout
			- Support for importing/exporting custom commands.
	- Editor library can be used outside of Maestro.exe as long as you implement the core service interfaces (IResourceService, IFeatureService)
 - Redesigned core API
	- ServerConnectionI -> IServerConnection
		- Connection interface is now separated into service specific sub-interfaces
			- IResourceService
			- IFeatureService
			- etc.
	- Cleaner resource object model
		- All top-level resource classes implement a common IResource interface
		- Base library includes resource classes generated from v1.0.0 xsd schemas.
		- Classes generated from newer xsd schemas reside in their own separate assembly.
	- New connections capabilities API
		- Allows interrogation of supported features/commands depending on implementation and mapguide server version.
	- Custom command API
		- Allows for custom functionality which may only work for newer versions of MapGuide.
 - Other New Features and Changes
	- Load Procedure validation support
	- API and UI support for listening to outbound requests. You can now view outbound requests of your MapGuide Server connections
	- Validation no longer logs redundant messages. All errors, warnings and other messages are unique for each resource being validated. You won't get repeats
 