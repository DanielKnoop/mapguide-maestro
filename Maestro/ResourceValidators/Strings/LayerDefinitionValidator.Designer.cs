//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OSGeo.MapGuide.Maestro.ResourceValidators.Strings {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LayerDefinitionValidator {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LayerDefinitionValidator() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("OSGeo.MapGuide.Maestro.ResourceValidators.Strings.LayerDefinitionValidator", typeof(LayerDefinitionValidator).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only vector layers and raster layers are currently validated.
        /// </summary>
        internal static string DrawingLayerDefinitionNotSupportedWarning {
            get {
                return ResourceManager.GetString("DrawingLayerDefinitionNotSupportedWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maestro does not support DrawingLayers.
        /// </summary>
        internal static string DrawingLayerNotSupportedWarning {
            get {
                return ResourceManager.GetString("DrawingLayerNotSupportedWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to load featuresource.
        /// </summary>
        internal static string FeatureSourceLoadError {
            get {
                return ResourceManager.GetString("FeatureSourceLoadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to find geometry column {0} in schema {1} on featuresource {2}.
        /// </summary>
        internal static string GeometryMissingError {
            get {
                return ResourceManager.GetString("GeometryMissingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Layer is missing core information.
        /// </summary>
        internal static string LayerNullError {
            get {
                return ResourceManager.GetString("LayerNullError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minimum scale ({0}) is larger than the maximum scale ({1}).
        /// </summary>
        internal static string MinAndMaxScaleSwappedError {
            get {
                return ResourceManager.GetString("MinAndMaxScaleSwappedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No FeatureSource is assigned to the layer.
        /// </summary>
        internal static string MissingFeatureSourceError {
            get {
                return ResourceManager.GetString("MissingFeatureSourceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Geometry is assigned to the layer.
        /// </summary>
        internal static string MissingGeometryError {
            get {
                return ResourceManager.GetString("MissingGeometryError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No scale ranges are defined, no data can be displayed.
        /// </summary>
        internal static string MissingScaleRangesError {
            get {
                return ResourceManager.GetString("MissingScaleRangesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one scale ranges is defined, this is valid, but unsupported by Maestro.
        /// </summary>
        internal static string MultipleScaleRangesWarning {
            get {
                return ResourceManager.GetString("MultipleScaleRangesWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The scale range {0}-{1} overlaps the range {2}-{3}.
        /// </summary>
        internal static string ScaleRangesOverlapInformation {
            get {
                return ResourceManager.GetString("ScaleRangesOverlapInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to validate column and schema.
        /// </summary>
        internal static string SchemaAndColumnReadFailedError {
            get {
                return ResourceManager.GetString("SchemaAndColumnReadFailedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to find schema {0} in featuresource {1}.
        /// </summary>
        internal static string SchemaMissingError {
            get {
                return ResourceManager.GetString("SchemaMissingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The layer has no type, or the type is unsupported by Maestro.
        /// </summary>
        internal static string UnsupportedLayerTypeWarning {
            get {
                return ResourceManager.GetString("UnsupportedLayerTypeWarning", resourceCulture);
            }
        }
    }
}
