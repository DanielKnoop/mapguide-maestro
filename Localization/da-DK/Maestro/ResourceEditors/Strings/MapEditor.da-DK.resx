<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DuplicateLayerInclusionConfirmation" xml:space="preserve">
    <value>Laget {0} er allerede i kortet, vil du tilføje det alligevel?</value>
    <comment>A confirmation message that is shown when the user attempts to include the same layer twice</comment>
  </data>
  <data name="FiniteDisplayScalesName" xml:space="preserve">
    <value>Zoom niveauer</value>
    <comment>The name displayed for finite display scales</comment>
  </data>
  <data name="FlattenGroupsWarning" xml:space="preserve">
    <value>Den valgte gruppe har undergrupper. Disse vil blive fjernet og alle
lag bliver flyttet til den valgte gruppe før konverteringen.
Vil du konvertere gruppen?</value>
    <comment>A warning that is displayed if the user attempts to convert a group with subgroups to a baselayer group</comment>
  </data>
  <data name="LayerExtentReadError" xml:space="preserve">
    <value>Kunne ikke læse lagets udstrækning: {0}</value>
    <comment>An error message that is displayed if the attempt to read the layer extents fail</comment>
  </data>
  <data name="LayerVisibilityToggleWarning" xml:space="preserve">
    <value>Den valgte gruppe har et eller flere lag der ikke er synlige.
Lag i en basis gruppe er altid synlige, og lagene bliver derfor 
synlige når gruppen konverteres.
Vil du forsætte med konverteringen?</value>
    <comment>A warning message that is displayed if the user attempts to convert an invisible layer to a baselayer</comment>
  </data>
  <data name="MapPreviewError" xml:space="preserve">
    <value>Fejlede under oprettelse af preview: {0}</value>
    <comment>An error message that is displayed if the map preview fails</comment>
  </data>
  <data name="MgCookerException" xml:space="preserve">
    <value>MgCooker gave en fejl: {0}</value>
    <comment>An error message that is displayed if MgCooker fails</comment>
  </data>
  <data name="MgCookerNeedsSavedMapError" xml:space="preserve">
    <value>Dette kort er endnu ikke gemt. MgCooker kan kun arbejde på kort der er gemt.</value>
    <comment>An error message that is displayed if the user attempts to produce tiles for an unsaved map</comment>
  </data>
  <data name="NewGroupBaseName" xml:space="preserve">
    <value>Ny gruppe</value>
    <comment>The default name for a new group</comment>
  </data>
  <data name="NoLayerSelectedError" xml:space="preserve">
    <value>Intet lag valgt</value>
    <comment>An error message that is displayed if the user has not selected a layer</comment>
  </data>
  <data name="SaveMapWithBaseLayersWarning" xml:space="preserve">
    <value>Dette kort indeholder basis lag.
Hvis du gemmer kortet bliver alle dannede tiles slettet.
Vil du gemme kortet?</value>
    <comment>A warning message that is displayed if the map contains baselayers, as that will result in all existing tiles being deleted</comment>
  </data>
  <data name="UseNewProjectionQuestion" xml:space="preserve">
    <value>Data udstrækningen er i en anden projektion end kortet, vil du også opdatere kortets projektion?</value>
    <comment>A question that is displayed if the maps projection differs from that of the featuresource</comment>
  </data>
  <data name="UseLayerProjectionQuestion" xml:space="preserve">
    <value>Vil du bruge projektionen fra laget
{0}?</value>
    <comment>A question that is displayed if the user can choose to user the layer projection</comment>
  </data>
  <data name="NoProjectionFoundWarning" xml:space="preserve">
    <value>Der blev fundet en udstrækning for laget, men intet koordinatsystem</value>
    <comment>A warning message that is displayed if the layers projection could not be read</comment>
  </data>
  <data name="LayerProjectionReadError" xml:space="preserve">
    <value>En fejl opstod under læsning af lagets projektion: {0}</value>
    <comment>An error message that is displayed if an error occurs while reading the data projection</comment>
  </data>
  <data name="LayerExtentMissingError" xml:space="preserve">
    <value>Der blev ikke fundet en udstrækning for laget.</value>
    <comment>An error message that is displayed if the layer has no extent data.</comment>
  </data>
</root>