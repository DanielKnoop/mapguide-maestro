<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DataOutsideMapWarning" xml:space="preserve">
    <value>Data from {0} is not visible in the map's start extent</value>
    <comment>A warning message that is displayed if a layer reports an extent that is outside the map's extent</comment>
  </data>
  <data name="DataReprojectionWarning" xml:space="preserve">
    <value>{0} has a different coordinate system than the map, this will impact performance as the coordinates are transformed while rendering the map. Maestro cannot validate the extent of the data.</value>
    <comment>A warning message that is displayed if a layer reports a coordinate system that differs from the map's.</comment>
  </data>
  <data name="FeatureSourceReadError" xml:space="preserve">
    <value>Layer {0}'s FeatureSource could not be read: {1}</value>
    <comment>An error message that is displayed if a FeatureSource fails to load</comment>
  </data>
  <data name="GroupHasDefaultLabelInformation" xml:space="preserve">
    <value>Group {0} has the default legend label</value>
    <comment>An information message that is displayed if a group is assigned the default group label</comment>
  </data>
  <data name="GroupMissingLabelInformation" xml:space="preserve">
    <value>Group {0} does not have a legend label</value>
    <comment>An information message that is displayed if a group has a blank legend label</comment>
  </data>
  <data name="LayerMissingLabelInformation" xml:space="preserve">
    <value>Layer {0} does not have a legend label</value>
    <comment>An information message that is displayed if a layer has a blank legend label</comment>
  </data>
  <data name="LayerReadError" xml:space="preserve">
    <value>Layer {0} could not be read: {1}</value>
    <comment>An error message that is displayed if a LayerDefinition fails to load</comment>
  </data>
  <data name="MissingLayerGeometryColumnError" xml:space="preserve">
    <value>Layer {0} has no geometry column</value>
    <comment>An error message that is displayed if a layer has no geometry column specified</comment>
  </data>
  <data name="MissingLayerSchemaError" xml:space="preserve">
    <value>Layer {0} has an invalid Schema</value>
    <comment>An error message that is displayed if the layer has no schema specified</comment>
  </data>
  <data name="MissingSpatialContextWarning" xml:space="preserve">
    <value>{0} has no spatial context (eg. no coordinate system)</value>
    <comment>A warning message that is displayed if the FeatureSource reports no spatial context</comment>
  </data>
  <data name="MultipleSpatialContextsInformation" xml:space="preserve">
    <value>{0} has more than one spatial context, the following test results may be inacurate</value>
    <comment>An information message that is displayed if a FeatureSource reports multiple spatial contexts</comment>
  </data>
  <data name="RasterReprojectionError" xml:space="preserve">
    <value>{0} is a raster layer, and in another coordinate system than the map. No data will be displayed by the layer</value>
    <comment>An error message that is displayed if a raster layer reports a different projection than the map, and the MapGuide server version does not support raster reprojection</comment>
  </data>
  <data name="ResourceReadError" xml:space="preserve">
    <value>{0} could not be processed for spatial info: {1}</value>
    <comment>An error message that is displayed if a resource fails to load</comment>
  </data>
  <data name="UnsupportedLayerTypeWarning" xml:space="preserve">
    <value>Layer {0} is a type that is unsupported by Maestro</value>
    <comment>A warning message that is displayed if a layer has a type that is not supported by Maestro</comment>
  </data>
</root>